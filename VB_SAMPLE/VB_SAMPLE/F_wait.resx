<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACoAWgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4cooor9dP3UKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK+sf8Ah2N8cP8Anw0X/wAG
        if4V8nV9v/8ABVjV77T/ANobw9Ha3txbRnwtbsVhlZQT9ru+cA9eBXn4ipVVWnSpNLmvur7W813PLxVW
        uq9KjRaXNzbq+1vNdzyzx5/wT++Nfw/0G51i68MxapY2qGWc6TeR3EkaAZLeWCHYD/ZBrzD4N/BPxN8d
        vEGo6L4Vitpr6w06TVJxdTiJRCjojEE9TmRePrXvf/BOHxT46n/aU0ex0y/1K70GaC4OtQPK724gELlH
        cE4BEnlhT1ycdCa9J/ZBt9Ktf23PjzDoQjXSI9J1xbVYceWIxqFvgJj+EdvbFctTFVqKqQm03FJppedt
        Vc4quMxGHVWnNpyjFSTStu7Wau/zPz+or2D9nX9m3V/2gNU1WRdUs/DHhXRIRcax4i1IgQWaHOBgkBmI
        VjglQApJI4z7Va/sa/CD4hySaH8NvjzYaz4zCt9n07UrQwRXjgfcR8g84J+XfwOmOa7qmMo0pOMntvo3
        b1tselVx1CjNwm9VvZN29WlofGtFekeAv2f/ABh4/wDjMnwxtrEWPiZbqW2ukvDtjtPKz5ryMM/KoU8j
        OeMZyK+ik/ZB+AWl623hfWP2h7dPFMcv2aVYbALbRzZwULlivDcHLjkc4p1MXSpNJu730TenfQdbHUKL
        UZNt2vom9O+l9D4tor2r42fsq+KPg78btN+Gwmh12/1hrf8Asi6gUxrdrNIYkJUk7DvVgQSQMZyRzXtN
        /wDsX/BnwPqi+FfG3x+s9K8cDYlxa29jutrWRgCEdycYGRyzJwQSBUyxlGKjK976qyb076Eyx+HjGMk7
        8yurJvTvoj4sor1j48/s4+JPgT8WI/A12y63dXixS6Xc2KHF9HKxSMqnJDF1ZSvPI4JGCfbv+GLfhp8N
        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
        i/4x8O3WkWsmieFY7pSk91oFk0Nw4IwcO8jlSf7y4I7EV8tkknJ5NJRWdKhSoK1KKRlRw9HDpqjFRv2C
        iiitzoCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA//Z
</value>
  </data>
</root>